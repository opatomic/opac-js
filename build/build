#!/bin/bash

# to minimize browser build, must have java 8+ installed, download 
# closure compiler, and set $CCJAR to the jar file's path.
#  https://github.com/google/closure-compiler

# TODO: support running closure compiler from within node?

CCJAR=~/Downloads/closure.compiler/closure-compiler-v20180204.jar
OPACJSDIR=../src
LIBDIR=../lib
TMPDIR=tmp


function deldir {
	if [ -d "$1" ]; then
		rm -r "$1"
	fi
}

function ensureDir {
	if [ ! -d "$1" ]; then
		mkdir "$1"
	fi
}

function writeVersion {
	printf "const VERSION = \"$VERSION\";\n\n" >> "$1"
}

function catHead {
	printf "// #### Contents of " >> "$2"
	basename "$1" | tr "\n" " " >> "$2"
	printf "####\n\n" >> "$2"
	cat "$1" >> "$2"
}


ensureDir "browser"
ensureDir "node"

deldir $TMPDIR
mkdir $TMPDIR


if [[ $# -eq 1 && $1 = "--publish" ]]; then
	VERSUFF=
else
	VERSUFF=-dev
fi

VERSION=`cat version.txt`
VERSION=$VERSION$VERSUFF


catHead "$OPACJSDIR/BigDec.js" "$TMPDIR/bundle.js"
catHead "$OPACJSDIR/OpaDef.js" "$TMPDIR/bundle.js"
catHead "$OPACJSDIR/PartialParser.js" "$TMPDIR/bundle.js"
catHead "$OPACJSDIR/Serializer.js" "$TMPDIR/bundle.js"
catHead "$OPACJSDIR/OpaUtils.js" "$TMPDIR/bundle.js"
catHead "$OPACJSDIR/StreamClient.js" "$TMPDIR/bundle.js"


printf "module = {exports:{}};\n(function(module){\n" > "$TMPDIR/deque.js"
cat "$LIBDIR/deque/deque.js" >> "$TMPDIR/deque.js"
printf "\n}(module));\nvar Deque = module.exports;\n" >> "$TMPDIR/deque.js"

printf "var BigInteger = (function(){\n" > "$TMPDIR/jsbn.js"
cat "$LIBDIR/jsbn/jsbn.js" "$LIBDIR/jsbn/jsbn2.js" >> "$TMPDIR/jsbn.js"
printf "\nreturn BigInteger;\n}());\n" >> "$TMPDIR/jsbn.js"


if [ -f $CCJAR ]; then
	java -jar "$CCJAR" --js "$TMPDIR/deque.js" --js_output_file "$TMPDIR/deque.min.js"
	java -jar "$CCJAR" --js "$TMPDIR/jsbn.js" --js_output_file "$TMPDIR/jsbn.min.js"
	java -jar "$CCJAR" --js "$TMPDIR/bundle.js" --js_output_file "$TMPDIR/bundle.min.js" --rewrite_polyfills=false

	cat "browser.head.js" > "browser/opac.browser.min.js"
	writeVersion "browser/opac.browser.min.js"
	printf "/* Deque (https://github.com/petkaantonov/deque) LICENSE file:\n" >> "browser/opac.browser.min.js"
	cat "$LIBDIR/deque/LICENSE" >> "browser/opac.browser.min.js"
	printf "*/\n" >> "browser/opac.browser.min.js"
	cat "$TMPDIR/deque.min.js" >> "browser/opac.browser.min.js"
	printf "\n\n/* BigInteger (http://www-cs-students.stanford.edu/~tjw/jsbn/) LICENSE file: */\n" >> "browser/opac.browser.min.js"
	cat "$LIBDIR/jsbn/LICENSE" "$TMPDIR/jsbn.min.js" >> "browser/opac.browser.min.js"
	printf "\n\n" >> "browser/opac.browser.min.js"
	cat "$TMPDIR/bundle.min.js" "browser.foot.js" >> "browser/opac.browser.min.js"
else
	echo "CCJAR not found. browser build will not minimize"
	rm "browser/opac.browser.min.js"
fi


cat "browser.head.js" > "browser/opac.browser.js"
writeVersion "browser/opac.browser.js"
printf "// Deque (https://github.com/petkaantonov/deque):\n" >> "browser/opac.browser.js"
cat "$TMPDIR/deque.js" >> "browser/opac.browser.js"
printf "\n\n// BigInteger (http://www-cs-students.stanford.edu/~tjw/jsbn/):\n" >> "browser/opac.browser.js"
cat "$LIBDIR/jsbn/LICENSE" "$TMPDIR/jsbn.js" >> "browser/opac.browser.js"
printf "\n\n" >> "browser/opac.browser.js"
cat "$TMPDIR/bundle.js" "browser.foot.js" >> "browser/opac.browser.js"


cat "node.head.js" > "node/opac.node.js"
writeVersion "node/opac.node.js"
cat "$TMPDIR/bundle.js" "node.foot.js" >> "node/opac.node.js"
sed -e "s/\\\$VERSION/$VERSION/" "package.json" > "node/package.json"
cp "../README.md" "node/README.md"


deldir $TMPDIR


# TODO: run some tests!!!

# TODO: generate docs?


