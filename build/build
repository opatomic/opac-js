#!/bin/sh

# to minimize browser build, must have java 8+ installed, download
# closure compiler, and set $CCJAR to the jar file's path.
#  https://github.com/google/closure-compiler

# to generate docs, must have jsdoc installed. install for node using the following command
#  npm install -g jsdoc

SRCDIR=../src
LIBDIR=../lib
OTMPDIR=tmp
OUTDIR=out
DOCSDIR=../docs


if [ ! -f "$CCJAR" ]; then
	# if $CCJAR file does not exist, search current directory for CC
	CCJAR=$(find ./*closure*compiler*.jar 2> /dev/null | tail -1)
fi

catAllSrc() {
	cat "$OTMPDIR/version.js" "$SRCDIR/Queue.js" "$SRCDIR/BigDec.js" "$SRCDIR/OpaDef.js" "$SRCDIR/PartialParser.js" "$SRCDIR/Serializer.js" "$SRCDIR/OpaUtils.js" "$SRCDIR/EventClient.js" >> "$1"
}


VERSION="$(./verget)"

echo "building v$VERSION"

mkdir -p "$OUTDIR"
mkdir -p "$OTMPDIR"
mkdir -p "$DOCSDIR"
rm -rf "${OUTDIR:?}/"*
rm -rf "${OTMPDIR:?}/"*
rm -rf "${DOCSDIR:?}/"*

printf "var VERSION = \"%s\";\n\n" "$VERSION" >> "$OTMPDIR/version.js"

printf "var BigInteger = (function(){\n" > "$OTMPDIR/jsbn.js"
cat "$LIBDIR/jsbn/jsbn.js" "$LIBDIR/jsbn/jsbn2.js" >> "$OTMPDIR/jsbn.js"
printf "\nreturn BigInteger;\n}());\n" >> "$OTMPDIR/jsbn.js"

# TODO: figure out how to do source mapping for minimized files? (helps with debugging)

if [ -f "$CCJAR" ]; then
	# TODO: store closure compiler version in source somewhere?
	java -jar "$CCJAR" --js "$OTMPDIR/jsbn.js" --js_output_file "$OTMPDIR/jsbn.min.js"
	java -jar "$CCJAR" --js "browser.head.js" "$OTMPDIR/version.js" "$SRCDIR/*.js" "browser.foot.js" --externs "biginteger.externs.js" --js_output_file "$OTMPDIR/bundle.min.js" --rewrite_polyfills=false --assume_function_wrapper --extra_annotation_name callback --extra_annotation_name hideconstructor -W VERBOSE

	OUTFILE="$OUTDIR/opac.browser.min.js"
	printf "// Minimized and bundled source code for opatomic client. see https://github.com/opatomic/opac-js for more info\n\n" >> "$OUTFILE"
	printf "/* BigInteger (http://www-cs-students.stanford.edu/~tjw/jsbn/) LICENSE file: */\n" >> "$OUTFILE"
	cat "$LIBDIR/jsbn/LICENSE" >> "$OUTFILE"
	printf "\n\n(function(){" >> "$OUTFILE"
	cat "$OTMPDIR/jsbn.min.js" "$OTMPDIR/bundle.min.js" >> "$OUTFILE"
	printf "}());\n" >> "$OUTFILE"
else
	echo "CCJAR not found. browser build will not minimize"
fi


OUTFILE="$OUTDIR/opac.browser.js"
printf "// Bundled source code for opatomic client. see https://github.com/opatomic/opac-js for more info\n" > "$OUTFILE"
printf "(function(){\n" >> "$OUTFILE"
cat "browser.head.js" >> "$OUTFILE"
printf "// BigInteger (http://www-cs-students.stanford.edu/~tjw/jsbn/):\n" >> "$OUTFILE"
cat "$LIBDIR/jsbn/LICENSE" "$OTMPDIR/jsbn.js" >> "$OUTFILE"
printf "\n\n" >> "$OUTFILE"
catAllSrc "$OUTFILE"
cat "browser.foot.js" >> "$OUTFILE"
printf "})();\n" >> "$OUTFILE"


mkdir "$OUTDIR/node"
cat "node.head.js" > "$OUTDIR/node/opac.node.js"
catAllSrc "$OUTDIR/node/opac.node.js"
cat "node.foot.js" >> "$OUTDIR/node/opac.node.js"
sed -e "s/\\\$VERSION/$VERSION/" "package.json" > "$OUTDIR/node/package.json"
cp "../README.md" "$OUTDIR/node/README.md"
cp "../LICENSE" "$OUTDIR/node/"


rm -rf "${OTMPDIR:?}/"*


# TODO: run some tests!!!

jsdoc "$SRCDIR/" -d "$DOCSDIR" -c "jsdoc.conf.json"
rm -rf "$DOCSDIR/fonts"

